import{a as p,i as d,S as v}from"./assets/vendor-06b1bbdf.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&a(n)}).observe(document,{childList:!0,subtree:!0});function i(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(e){if(e.ep)return;e.ep=!0;const s=i(e);fetch(e.href,s)}})();function m(r){return r.map(({tags:t,largeImageURL:i,webformatURL:a,likes:e,views:s,comments:n,downloads:h})=>`
      <li class="gallery"><a href="${i}" class="gallery-link">
      <img src="${a}" alt="${t}" title="" class="picture"/>
      </a>
      <ul class = "img-info">
      <li class = "item-info">Likes<span class = "info-value">${e}</span></li>
      <li class = "item-info">Views<span class = "info-value">${s}</span></li>
      <li class = "item-info">Comments<span class = "info-value">${n}</span></li>
      <li class = "item-info">Downloads<span class = "info-value">${h}</span></li>
      </ul>
      </li>
`).join("")}async function g(r="",t){const i="43223956-11c63a864af473bf01df350b7",a="https://pixabay.com/api/";try{const{data:e}=await p.get(a,{params:{key:i,q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:"15",page:t}});return e}catch{d.error({message:"Sorry, there are no images matching your search query. Please try again!"})}}const y=document.querySelector(".search-form"),l=document.querySelector(".gallery-list"),f=document.querySelector(".loader"),o=document.querySelector(".load-btn");let c=1;const L=new v(".gallery-link");let u="";y.addEventListener("submit",b);o.addEventListener("click",S);async function b(r){r.preventDefault(),l.innerHTML="",f.classList.remove("isactive"),o.classList.remove("isactive"),u=r.currentTarget.search.value.trim();try{const t=await g(u,c);t.hits.length?(l.insertAdjacentHTML("beforeend",m(t.hits)),L.refresh(),y.reset(),f.classList.remove("isactive"),o.classList.add("isactive")):(d.error({message:"Sorry, there are no images matching your search query. Please try again!"}),o.classList.remove("isactive"))}catch{console.log(error)}}async function S(r){r.preventDefault(),o.classList.remove("isactive"),c+=1;try{const t=await g(u,c);l.insertAdjacentHTML("beforeend",m(t.hits)),c<t.totalHits/c?o.classList.add("isactive"):d.info({message:"We're sorry, but you've reached the end of search results."});const a=document.querySelector(".gallery").getBoundingClientRect().height;window.scrollBy({left:0,top:a*2,behavior:"smooth"})}catch{console.log(error)}}
//# sourceMappingURL=commonHelpers.js.map
